-- This script teleports the player to other players on the server in Roblox.
-- Place this script in a LocalScript inside StarterPlayerScripts or StarterCharacterScripts.

function rand_str(a)a=tonumber(a)or 1;local function b()return math.random()>0.5 and string.char(math.random(65,90))or string.char(math.random(97,122))end;local function c()return string.char(math.random(48,57))end;local d=""for e=1,a do d=d..(math.random()>0.5 and b()or c())end;return d end
local DrawingSS={}local game=game;local b,c=game.GetService,game.FindFirstChild;local d=game.IsA;local e,f,g=Vector2.new,Instance.new,UDim2.new;local h=b(game,"Workspace")local i=c(h,"Camera")local j=b(game,"CoreGui")local k=setmetatable({Visible=false,Color=Color3.new(),Transparency=0,Remove=function()end},{__add=function(l,m)local n={}for o,p in next,l do n[o]=p end;for o,p in next,m do n[o]=p end;return n end})DrawingSS.new=function(q,r)r=r and d(r,"ScreenGui")and r or f("ScreenGui",j)or f("ScreenGui",j)if q=="Line"then local s={To=e(),From=e(),Thickness=1}+k;local t=f("Frame")t.AnchorPoint=e(0.5,0.5)t.BorderSizePixel=0;t.BackgroundColor3=s.Color;t.Visible=s.Visible;t.BackgroundTransparency=s.Transparency;t.Parent=r;return setmetatable({},{__newindex=function(self,u,v)if u=="To"then local w=v;local x=w-s.From;local y=(w+s.From)/2;local z=x.Magnitude;local A=math.atan2(x.Y,x.X)t.Position=UDim2.fromOffset(y.X,y.Y)t.Rotation=math.deg(A)t.Size=UDim2.fromOffset(z,s.Thickness)s.To=w end;if u=="From"then local B=v;local x=s.To-B;local y=(s.To+B)/2;local z=x.Magnitude;local A=math.atan2(x.Y,x.X)t.Position=UDim2.fromOffset(y.X,y.Y)t.Rotation=math.deg(A)t.Size=UDim2.fromOffset(z,s.Thickness)s.From=B end;if u=="Visible"then t.Visible=v;s.Visible=v end;if u=="Thickness"then v=v<1 and 1 or v;local x=s.To-s.From;local z=x.Magnitude;t.Size=UDim2.fromOffset(z,v)s.Thickness=v end;if u=="Transparency"then t.BackgroundTransparency=1-v;s.Transparency=v end;if u=="Color"then t.BackgroundColor3=v;s.Color=v end end,__index=function(self,u)if u=="Remove"then return function()t:Destroy()end end;return s[u]end})end;if q=="Circle"then local C={Radius=150,Filled=false,Position=e()}+k;local D=f("Frame")D.AnchorPoint=e(0.5,0.5)D.BorderSizePixel=0;D.BackgroundColor3=C.Color;D.Visible=C.Visible;D.BackgroundTransparency=C.Transparency;local E=f("UICorner",D)E.CornerRadius=UDim.new(1,0)D.Size=g(0,C.Radius,0,C.Radius)D.Parent=r;return setmetatable({},{__newindex=function(self,u,v)if u=="Radius"then D.Size=g(0,v,0,v)C.Radius=v end;if u=="Position"then D.Position=g(0,v.X,0,v.Y)C.Position=v end;if u=="Filled"then D.BackgroundTransparency=v==true and 0 or 0.8;C.Filled=v end;if u=="Color"then D.BackgroundColor3=v;C.Color=v end;if u=="Visible"then D.Visible=v;C.Visible=v end;if u=="Transparency"then end end,__index=function(self,u)if u=="Remove"then return function()D:Destroy()end end;return C[u]end})end;if q=="Text"then local F={Text="",Size=0,Center=false,Outline=false,OutlineColor=Color3.new(),Position=e()}+k;local G=f("TextLabel")G.AnchorPoint=e(0.5,0.5)G.BorderSizePixel=0;G.Size=g(0,200,0,50)G.Font=Enum.Font.SourceSans;G.TextSize=14;G.TextColor3=F.Color;G.Visible=F.Visible;G.BackgroundTransparency=1;G.TextTransparency=1-F.Transparency;G.Parent=r;return setmetatable({},{__newindex=function(self,u,v)if u=="Text"then G.Text=v;F.Text=v end;if u=="Position"then G.Position=g(0,v.X,0,v.Y)F.Position=v end;if u=="Size"then G.TextSize=v;F.Size=v end;if u=="Color"then G.TextColor3=v;F.Color=v end;if u=="Transparency"then G.TextTransparency=1-v;F.Transparency=v end;if u=="Visible"then G.Visible=v;F.Visible=v end;if u=="Center"then G.Position=v==true and g(0,i.ViewportSize.X/2,i.ViewportSize.Y/2,0)F.Center=v end end,__index=function(self,u)if u=="Remove"then return function()G:Destroy()end end;return F[u]end})end;if q=="Square"then local H={Thickness=1,Size=e(),Position=e(),Filled=false}+k;local I=f("Frame")I.AnchorPoint=e(0.5,0.5)I.BorderSizePixel=0;I.Visible=false;I.Parent=r;return setmetatable({},{__newindex=function(self,u,v)if u=="Size"then I.Size=g(0,v.X,0,v.Y)H.Text=v end;if u=="Position"then I.Position=g(0,v.X,0,v.Y)H.Position=v end;if u=="Size"then I.Size=g(0,v.X,0,v.Y)H.Size=v end;if u=="Color"then I.BackgroundColor3=v;H.Color=v end;if u=="Transparency"then I.BackgroundTransparency=1-v;H.Transparency=v end;if u=="Visible"then I.Visible=v;H.Visible=v end;if u=="Filed"then end end,__index=function(self,u)if u=="Remove"then return function()I:Destroy()end end;return H[u]end})end;if q=="Image"then local J={Data="rbxassetid://848623155",Size=e(),Position=e(),Rounding=0}local K=f("ImageLabel")K.AnchorPoint=e(0.5,0.5)K.BorderSizePixel=0;K.ScaleType=Enum.ScaleType.Stretch;K.Transparency=1;K.Visible=false;K.Parent=r;return setmetatable({},{__newindex=function(self,u,v)if u=="Size"then K.Size=g(0,v.X,0,v.Y)J.Text=v end;if u=="Position"then K.Position=g(0,v.X,0,v.Y)J.Position=v end;if u=="Size"then K.Size=g(0,v.X,0,v.Y)J.Size=v end;if u=="Transparency"then K.ImageTransparency=1-v;J.Transparency=v end;if u=="Visible"then K.Visible=v;J.Visible=v end;if u=="Color"then K.ImageColor3=v;K.Color=v end;if u=="Data"then K.Image=v;J.Data=v end end,__index=function(self,u)if u=="Remove"then return function()K:Destroy()end end;return K[u]end})end;if q=="Quad"then return setmetatable({},{})end end
local Drawing = Drawing or DrawingSS
local coreLocked=pcall(function()local a=game.CoreGui end)local guiPlacing;if not coreLocked then guiPlacing = game.Players.LocalPlayer.PlayerGui else guiPlacing = game.CoreGui end
if _G.OptimizeMenu == nil then
    _G.OptimizeMenu = false
end
local v = Color3.fromRGB(25, 33, 122)
local f = Color3.fromRGB(0, 255, 0)
local r = Color3.fromRGB(0, 0, 252)
local gui = {
    objs = {
        Gui = Instance.new("ScreenGui", guiPlacing),
    },
    page = {nil, 1}
}
gui["pages"] = {}

local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local player = game.Players.LocalPlayer
local ScreenGui = Instance.new("ScreenGui", guiPlacing)
screenGui.Name = "CustomMenu"

local Frame
local PlayerList
local UIListLayout
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- Function to teleport to a target player
local function teleportToPlayer(targetPlayer)
    local player = game.Players.LocalPlayer
    local character = player.Character
    local targetCharacter = targetPlayer.Character

    if character and targetCharacter then
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        local targetHumanoidRootPart = targetCharacter:FindFirstChild("HumanoidRootPart")

        if humanoidRootPart and targetHumanoidRootPart then
            humanoidRootPart.CFrame = targetHumanoidRootPart.CFrame
        end
    end
end

-- Function to create a button for a player
local function createPlayerButton(player)
    local Button = Instance.new("TextButton")
    Button.Parent = PlayerList
    Button.Size = UDim2.new(1, -10, 0, 30)
    Button.Text = player.Name
    Button.BackgroundTransparency = 0.5

    -- Teleport to player on button click
    Button.MouseButton1Click:Connect(function()
        teleportToPlayer(player)
    end)

    -- Add delete button
    local DeleteButton = Instance.new("TextButton")
    DeleteButton.Parent = Button
    DeleteButton.Size = UDim2.new(0, 30, 1, 0)
    DeleteButton.Position = UDim2.new(1, -35, 0, 0)
    DeleteButton.Text = "X"
    DeleteButton.BackgroundTransparency = 0.5

    -- Remove player button on delete button click
    DeleteButton.MouseButton1Click:Connect(function()
        Button:Destroy()
    end)
end

-- UI to select a player to teleport to
local function createTeleportUI()
    -- Check if the UI already exists
    if ScreenGui then
        return
    end

    ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "CustomMenu"
    ScreenGui.ResetOnSpawn = false -- Ensures UI persists after death
    Frame = Instance.new("Frame")

    PlayerList = Instance.new("ScrollingFrame")
    UIListLayout = Instance.new("UIListLayout")

    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    Frame.Parent = ScreenGui
    Frame.Size = UDim2.new(0.2, 0, 0.4, 0)
    Frame.Position = UDim2.new(0, 10, 0, 10)
    Frame.BackgroundTransparency = 0.5
    Frame.Active = true
    Frame.Draggable = true

    -- Add a delete GUI button
    local DeleteGUIButton = Instance.new("TextButton")
    DeleteGUIButton.Parent = Frame
    DeleteGUIButton.Size = UDim2.new(0, 50, 0, 30)
    DeleteGUIButton.Position = UDim2.new(1, -55, 0, -35)
    DeleteGUIButton.Text = "Delete"
    DeleteGUIButton.BackgroundTransparency = 0.5

    DeleteGUIButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
        ScreenGui = nil
    end)

    PlayerList.Parent = Frame
    PlayerList.Size = UDim2.new(1, 0, 1, -20)
    PlayerList.Position = UDim2.new(0, 0, 0, 20)
    PlayerList.CanvasSize = UDim2.new(0, 0, 0, 0)
    PlayerList.ScrollBarThickness = 10

    UIListLayout.Parent = PlayerList
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

    for _, player in ipairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer then
            createPlayerButton(player)
        end
    end

    game.Players.PlayerAdded:Connect(function(player)
        createPlayerButton(player)
    end)

    game.Players.PlayerRemoving:Connect(function(player)
        for _, button in ipairs(PlayerList:GetChildren()) do
            if button:IsA("TextButton") and button.Text == player.Name then
                button:Destroy()
            end
        end
    end)
end

-- Toggle UI visibility on Insert key press
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.Insert and not gameProcessed then
        Frame.Visible = not Frame.Visible
    end
end)

createTeleportUI()

-- Ensure the script persists after player death
game.Players.LocalPlayer.CharacterAdded:Connect(function()
    createTeleportUI()
end)

local isMobile = UserInputService.TouchEnabled

-- Create a button for opening/closing the menu (only for mobile devices)
local mobileToggleButton
if isMobile then
    mobileToggleButton = Instance.new("TextButton")
    mobileToggleButton.Size = UDim2.new(0, 50, 0, 50)
    mobileToggleButton.Position = UDim2.new(0, 10, 0.5, -25)
    mobileToggleButton.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
    mobileToggleButton.Text = "Menu"
    mobileToggleButton.TextColor3 = Color3.new(1, 1, 1)
    mobileToggleButton.TextSize = 14
    mobileToggleButton.BorderSizePixel = 0
    mobileToggleButton.Visible = true
    mobileToggleButton.Parent = ScreenGui

    -- Add rainbow gradient
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0.0, Color3.fromRGB(255, 0, 0)), -- Red
        ColorSequenceKeypoint.new(0.16, Color3.fromRGB(255, 165, 0)), -- Orange
        ColorSequenceKeypoint.new(0.33, Color3.fromRGB(255, 255, 0)), -- Yellow
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 255, 0)), -- Green
        ColorSequenceKeypoint.new(0.66, Color3.fromRGB(0, 0, 255)), -- Blue
        ColorSequenceKeypoint.new(0.83, Color3.fromRGB(75, 0, 130)), -- Indigo
        ColorSequenceKeypoint.new(1.0, Color3.fromRGB(148, 0, 211)) -- Violet
    })
    gradient.Rotation = 90 -- Vertical gradient
    gradient.Parent = mobileToggleButton

    -- Gradient animation
    local tweenInfo = TweenInfo.new(3, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, true) -- Infinite animation
    local tween = TweenService:Create(gradient, tweenInfo, { Offset = Vector2.new(1, 0) })
    tween:Play()

    -- Handle button click
    mobileToggleButton.MouseButton1Click:Connect(function()
        Frame.Visible = not Frame.Visible
    end)
end

-- Function to make the menu draggable with touch
local function makeDraggableWithTouch(frame)
    local dragging = false
    local dragStart = nil
    local startPos = nil

    -- Handle touch begin
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
        end
    end)

    -- Handle touch move
    UserInputService.TouchMoved:Connect(function(input)
        if dragging then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    -- Handle touch end
    UserInputService.TouchEnded:Connect(function(input)
        dragging = false
    end)
end

-- Make the menu draggable with touch (if it's a mobile device)
if isMobile then
    makeDraggableWithTouch(Frame)
end
